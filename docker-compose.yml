version: '3.9'

services:
  tgbot-app:
    build: .
    container_name: tgbot-container
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - 80:80
      - 443:443
      - 88:88
      - 8443:8443
    networks:
      - appnet
    depends_on:
      app-db:
        condition: service_healthy

  app-db:
    image: postgres:14.9-alpine
    container_name: postgres-container
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - appnet
    volumes:
      - tgbot-db-data:/var/lib/postgresql/data
      - ./init-database.sql:/docker-entrypoint-initdb.d/init-database.sql

networks:
  appnet:
    name: tgbot-net
    driver: bridge

volumes:
  tgbot-db-data:
    name: tgbot-db-volume