name: ksivpn-tgbot

services:
  ksivpn-tgbot:
    build:
      context: .
      dockerfile: ./build/bot/Dockerfile
    image: exmanka/ksivpn-telegram-bot:${TAG}
    container_name: ksivpn-tgbot
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - ${BOT_HTTP_PORT}:80
      - ${BOT_HTTPS_PORT}:443
    networks:
      - ksivpn-net
    volumes:
      - ksivpn-tgbot-postgres-backups:${BACKUP_PATH}
    depends_on:
      ksivpn-tgbot-postgres:
        condition: service_healthy

  ksivpn-tgbot-postgres:
    build:
      context: ./build/database
      args:
        ADDITIONAL_LANGUAGE: ${ADDITIONAL_LANGUAGE}
    image: exmanka/ksivpn-telegram-bot-postgres:${TAG}
    container_name: ksivpn-tgbot-postgres
    restart: unless-stopped
    environment:
      TZ: ${TZ}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_INITDB_ARGS: ${POSTGRES_INITDB_ARGS}
    ports:
      - ${POSTGRES_PORT}:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ksivpn-net
    volumes:
      - ksivpn-tgbot-postgres-data:/var/lib/postgresql/data
      - ksivpn-tgbot-postgres-backups:/var/lib/postgresql/backups

networks:
  ksivpn-net:
    name: ksivpn-net

volumes:
  ksivpn-tgbot-postgres-data:
    name: ksivpn-tgbot-postgres-data
  ksivpn-tgbot-postgres-backups:
    name: ksivpn-tgbot-postgres-backups
