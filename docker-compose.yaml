services:
  tgbot:
    build:
      context: .
      dockerfile: ./build/bot/Dockerfile
    image: exmanka/ksivpn-telegram-bot:${TAG:-latest}
    container_name: ksivpn-tgbot
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - ${BOT_HTTP_PORT:-80}:80
      - ${BOT_HTTPS_PORT:-443}:443
    networks:
      - app-net
    volumes:
      - tgbot-db-backups:${BACKUP_PATH}
    depends_on:
      tgbot-db:
        condition: service_healthy

  tgbot-db:
    build:
      context: ./build/database
      args:
        ADDITIONAL_LANGUAGE: ${ADDITIONAL_LANGUAGE}
    image: exmanka/ksivpn-telegram-bot-postgres:${TAG:-latest}
    container_name: ksivpn-tgbot-postgres
    restart: unless-stopped
    environment:
      TZ: ${TZ}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_INITDB_ARGS: ${POSTGRES_INITDB_ARGS}
    ports:
      - ${POSTGRES_PORT:-5432}:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-net
    volumes:
      - tgbot-db-data:/var/lib/postgresql/data
      - tgbot-db-backups:/var/lib/postgresql/backups

networks:
  app-net:

volumes:
  tgbot-db-data:
  tgbot-db-backups:
